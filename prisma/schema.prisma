// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Curator{
  id String @id @default(uuid())
  firstName String
  lastName String
  phone String
  email String
  artPiece String @default("")
  artPieces ArtPiece[]
}

model Artist{
  id String @id @default(uuid())
  firstName String 
  lastName String 
  phone String
  email String
  artPiece String @default("")
  artPieces ArtPiece[] // Define the opposite relation field
}

model ArtPiece{
  id String @id @default(uuid())
  title String
  imgUrl String
  year Int
  price Float
  estimate Float
  artistId String
  curatorId String
  artist Artist @relation(fields: [artistId], references: [id])
  curator Curator @relation(fields: [curatorId], references: [id])
  status String @default("in-stock")
}

 model Account {
      id                 String  @id @default(cuid())
      userId             String
      type               String
      provider           String
      providerAccountId  String
      refresh_token      String? @db.Text
      access_token       String? @db.Text
      expires_at         Int?
      token_type         String?
      scope              String?
      id_token           String? @db.Text
      session_state      String?
      oauth_token_secret String?
      oauth_token        String?
    
      user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    
      @@unique([provider, providerAccountId])
    }
    
    model Session {
      id           String   @id @default(cuid())
      sessionToken String   @unique
      userId       String
      expires      DateTime
      user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    }
    
    model User {
      id            String    @id @default(cuid())
      name          String?
      email         String?   @unique
      emailVerified DateTime?
      image         String?
      accounts      Account[]
      sessions      Session[]
    }
    
    model VerificationToken {
      identifier String
      token      String   @unique
      expires    DateTime
    
      @@unique([identifier, token])
    }
